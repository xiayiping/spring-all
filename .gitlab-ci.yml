


stages:
  - preMergeCheck
  - build
  - test
  - deploy
  - finish

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

job-preMergeCheck:
  stage: preMergeCheck
  image: maven:3.8.3-openjdk-17
  only:
    - merge_requests
  script:
    - git fetch origin $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME:$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - git branch -a
    - printenv
    - git --version
    - git log $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME ^$CI_MERGE_REQUEST_TARGET_BRANCH_NAME --pretty=%s --no-merges | grep -Pv '^([a-z/]+)?/[A-Za-z]+-\d+.*$' | wc -l
    - export noJiraCt="$(git log $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME ^$CI_MERGE_REQUEST_TARGET_BRANCH_NAME --pretty=%s --no-merges | grep -Pv '^([a-z/]+)?/[A-Za-z]+-\d+.*$' | wc -l)"
    - echo 2
    - if [ "${noJiraCt}" != "0" ]; then 
        echo "发现没有写Jira号提交历史，数量 [ $noJiraCt ] " ; 
        exit 1; 
      fi
    - echo "pass jira number check [ noJiraCt ] ";

# dev push only build
job-build:
  stage: build
#  tags:
#    - maven3.8-java17
  image: maven:3.8.3-openjdk-17
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_REF_PROTECTED != "true"
  script:
    - echo "Hello, this is build."
    - printenv
    - git log -5 --author="$CI_COMMIT_AUTHOR" --pretty='%h %cd %aN %s %d' --no-merges --graph --date=relative --date-order
    - export noJiraCt="$(git log -5 --pretty=%s --author="$CI_COMMIT_AUTHOR" --no-merges | grep -Pv '^([a-z/]+)?/[A-Za-z]+-\d+.*$' | wc -l )"
    - if [ "${noJiraCt}" != "0" ]; then
        echo "发现 $CI_COMMIT_AUTHOR 没有写Jira号的提交历史，数量 [ $noJiraCt ] "  ;
        exit 1;
      else
        echo "pass jira number check [ $noJiraCt ] ";
      fi
    - mvn compile

# merge should test
job-test:
  stage: test
#  tags:
#    - maven3.8-java17
  image: maven:3.8.3-openjdk-17
  only:
    - merge_requests
  script:
    - echo "Hello, this is test."
    - printenv
    - git log --pretty='%h %cd %aN%d %s' --graph --date=relative --date-order
    - git branch -a
    - mvn compile

# approve merge should deploy
job-deploy:
  stage: deploy
#  tags:
#    - maven3.8-java17
  #  image: maven:3.8.3-openjdk-17
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true"
  script:
    - echo "Hello, this is deploy. 1 $CI_MERGE_REQUEST_TARGET_BRANCH_SHA"
    - echo "Hello, this is deploy. 1 $CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - printenv


job-finish:
  stage: finish
#  tags:
#    - maven3.8-java17
  #  image: maven:3.8.3-openjdk-17
  script:
    - echo "Hello, this is finish. add sth  22"
    - printenv