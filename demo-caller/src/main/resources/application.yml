server:
  port: 8093
  ssl:
    enabled: true
    # explicit key store so intellij can recognize https
#    key-store: "classpath:keystore/keystore.p12"
#    key-store-password: "123456"
    key-store: "classpath:keystore/keystore.pem"
#    bundle: "clientStoreJks"
    bundle: "defaultBundle"
    key-store-type: pem

my:
  name: "xypxyp"
  age: 11

name:
  a:
    b: ${nameab}

spring:
  application:
    name: callerServer
  cloud:
    nacos:
      username: nacos
      password: ${nacos_password}
      config:
        server-addr: 10.3.1.71:8848  # Nacos Config地址
        namespace: dev  # 命名空间(默认:PUBLIC)
        group: DEFAULT_GROUP  # 服务组
        # prefix: ${spring.application.name} #文件名前缀(默认是spring.application.name)
        file-extension: yml  # 文件名后缀
        timeout: 5000  # 从Nacos读取配置项的超时时间
        config-long-poll-timeout: 10000  # 长轮询超时时间
        config-retry-time: 2000  # 轮询的重试时间
        max-retry: 3  # 长轮询最大重试次数
        refresh-enabled: true  # 开启监听和自动刷新
  config:
    import:
      - nacos:${spring.application.name}.${spring.cloud.nacos.config.file-extension}?refresh=true
  ssl:
    bundle:
      jks:
        clientStoreJks:
          keystore:
            location: "classpath:keystore/keystore.p12"
            password: "123456"
          truststore:
            location: "classpath:keystore/certstore.p12"
            password: "123456"
        feignStore:
          truststore:
            location: "classpath:keystore/certstore.p12"
            password: "123456"
          keystore:
            location: "classpath:keystore/keystore.p12"
            password: "123456"
      pem:
        clientStorePem:
          keystore:
            certificate: "classpath:keystore/certstore.pem"
            private-key: "classpath:keystore/keystore.pem"
            private-key-password: 123456


  datasource:
    url: jdbc:mysql://localhost:3306/companyproj?rewriteBatchedStatements=true #
    #  username: matt.xia
    #  password: Q1w2e3r4
    username: yipingx
    password: Xyp54250
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: false
    hibernate:
      ddl-auto: update #create update
    properties:
      hibernate:
        format_sql: false
        jdbc.batch_size: 10
        order_inserts: true
        order_updates: true
        generate_statistics: true
  web:
    resources:
      static-locations: "file:caller/src/main/resources/static"
  freemarker:
    suffix: ""
    template-loader-path: "file:caller/src/main/resources/template"
    cache: false

app:
  service-principal: 111
  keytab-location: 111

springdoc:
  api-docs:
    path: "/api-docs"
  swagger-ui:
    path: "swagger-ui-custom.html"

echo:
  url: "https://localhost:8094"

management:
  tracing:
    enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
      path-mapping:
        prometheus: ""
#  otlp:
#    metrics:
#      export:
#        enabled: true
#        url: "http://localhost:5555"
#    tracing:
#      endpoint: "http://localhost:4318"
logging:
  file:
    path: logs



secret:
  keystore:
    entries:
      tcghl:
        type: vault
        url: "https://vault.tcghl.com"
#        url: "https://localhost:8180"
        ca-path: "d:/tools/vault/1.14/tcghl-com-crt.pem"
#        ca-path: "d:/tools/vault/1.14/ca.pem"
        paths:
          pathKeyStore:
#            secret-path: "/v1/kv_xyp/data/dev"
            secret-path: "/v1/secret/data/dev/paradise/keystore"
            bundles:
              defaultBundle:
                trust-store-field: "trust_store"
                trust-store-password-field: "password"
                key-store-field: "key_store"
                key-store-password-field: "password"
      aws:
        type: aws
        region: "ap-southeast-1"
        paths:
          defaultPath:
            bundles:
              awsBundle1:
                key-store-field: "key_store"