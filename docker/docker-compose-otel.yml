version: '3.0'

services:

  collector:
#    image: otel/opentelemetry-collector:latest
    ## only contrib version contains loki exporter
    image: otel/opentelemetry-collector-contrib
    container_name: collector
    hostname: collector
    depends_on:
      tempo:
        condition: service_healthy
#      prometheus:
#        condition: service_healthy
    command: ["--config=/etc/collector-config.yaml"]
    volumes:
      - ../config/otel/collector-config-local.yml:/etc/collector-config.yaml
      - ../logs:/var/log
    ports:
      - "5555:5555"
      - "5556:5556"
      - "6666:6666"
#
  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    container_name: tempo
    hostname: tempo
    volumes:
      - ../config/tempo/tempo-config.yaml:/etc/tempo.yaml
#      - ../config/tempo/tempo-overrides.yaml:/etc/overrides.yaml
      - ../debug/tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3200/status || exit 1

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    hostname: prometheus
#    command:
#      - --config.file=/etc/prometheus.yaml
#      - --web.enable-remote-write-receiver
#      - --enable-feature=exemplar-storage
#    volumes:
#      - ../config/prometheus/prometheus.yaml:/etc/prometheus.yaml
#    ports:
#      - "9090:9090"
#    healthcheck:
#      interval: 5s
#      retries: 10
#      test: wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1
#
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    depends_on:
      tempo:
        condition: service_healthy
#      prometheus:
#        condition: service_healthy
    volumes:
      - ../config/grafana/grafana-bootstrap.ini:/etc/grafana/grafana.ini
      - ../config/grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

  loki:
    image: grafana/loki:latest
    hostname: loki
    ports:
      - "3100:3100"
    command: ["-config.file=/etc/loki/local-config.yaml"]
#    volumes:
#      - ../debug/docker/volumes/loki:/etc/loki

networks:
  default:
    name: inst-java-apps-using-otel
